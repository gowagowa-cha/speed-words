import React from "react";
import { useState } from "react/cjs/react.development";

const texts = [
  "–ß—Ç–æ —Ä–∞–∑—É–º —á–µ–ª–æ–≤–µ–∫–∞ –º–æ–∂–µ—Ç –ø–æ—Å—Ç–∏–≥–Ω—É—Ç—å –∏ –≤–æ —á—Ç–æ –æ–Ω –º–æ–∂–µ—Ç –ø–æ–≤–µ—Ä–∏—Ç—å, —Ç–æ–≥–æ –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω –¥–æ—Å—Ç–∏—á—å",
  "–°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –Ω–µ –∫ —É—Å–ø–µ—Ö—É, –∞ –∫ —Ü–µ–Ω–Ω–æ—Å—Ç—è–º, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –¥–∞–µ—Ç",
  "–°–≤–æ–∏–º —É—Å–ø–µ—Ö–æ–º —è –æ–±—è–∑–∞–Ω–∞ —Ç–æ–º—É, —á—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–ø—Ä–∞–≤–¥—ã–≤–∞–ª–∞—Å—å –∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–ø—Ä–∞–≤–¥–∞–Ω–∏–π –æ—Ç –¥—Ä—É–≥–∏—Ö.",
  "–°–ª–æ–∂–Ω–µ–µ –≤—Å–µ–≥–æ –Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç —É–ø–æ—Ä—Å—Ç–≤–∞",
  "–ñ–∏–∑–Ω—å - —ç—Ç–æ —Ç–æ, —á—Ç–æ —Å —Ç–æ–±–æ–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –ø–æ–∫–∞ —Ç—ã —Å—Ç—Ä–æ–∏—à—å –ø–ª–∞–Ω—ã",
];

const sentence = texts[Math.floor(Math.random() * texts.length)];
const res = sentence.replace(/[^a-z–∞-—è—ë\s]/gi, "");
const words = res.split(" ");

export const Typing = () => {
  const curIndexRef = React.useRef(0);
  const [second, setSecond] = React.useState(20);
  const [currenrWord, setCurrentWord] = React.useState(words[0]);
  const [inputValue, setInputValue] = React.useState("");
  const [wordCount, setWordCount] = React.useState(0);
  const [isError, setIsError] = React.useState(false);

  React.useEffect(() => {
    setInterval(() => {
      setSecond((prev) => prev - 1);
    }, 1000);
  }, []);

  const OnChangeInput = (e) => {
    const { value } = e.target;

    if (currenrWord === value) {
      curIndexRef.current += 1;
      setCurrentWord(words[curIndexRef.current]);
      setInputValue("");
      setWordCount((prev) => prev + 1);
      return;
    }
    if (!new RegExp(`^${value}`).test(currenrWord)) {
      setIsError(true);
    } else {
      setIsError(false);
    }
    setInputValue(e.target.value.trim());
  };

  return (
    <div className="flex typing">
      <p className="typing__enter-word">–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ</p>
      <h3 className="typing__word">
        {/* Slaves <span className='typing__man-sign'>üìå</span> */}
        {currenrWord}
      </h3>
      <input
        type="text"
        value={inputValue}
        onChange={OnChangeInput}
        className={`typing__input ${isError ? "error" : ""}`}
      />
      <div className="typing__progress">
        <div className="typing__timer">
          <p>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏:</p>
          <b>{second} —Å–µ–∫.</b>
        </div>
        <div className="typing__counter">
          <p>–í–≤–µ–¥–µ–Ω–æ —Å–ª–æ–≤:</p>
          <b>{wordCount}</b>
        </div>
      </div>
    </div>
  );
};
